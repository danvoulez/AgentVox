import { DecisionOption } from "@/contexts/DecisionContext";

export interface Archetype {
  id: string;
  name: string;
  description: string;
  icon: string;
  idealTimeOfDay: 'dawn' | 'day' | 'night' | 'any';
  color: string;
  evaluateOption: (option: DecisionOption) => {
    score: number;
    reasoning: string;
  };
}

// Defini√ß√£o dos arqu√©tipos de conselheiros
export const archetypes: Archetype[] = [
  {
    id: "strategist",
    name: "O Estrategista",
    description: "Foca no valor de longo prazo e impacto estrat√©gico das decis√µes.",
    icon: "üìà",
    idealTimeOfDay: "dawn",
    color: "#4B79A1",
    evaluateOption: (option: DecisionOption) => {
      // O estrategista valoriza:
      // 1. Alto valor a longo prazo
      // 2. Alta import√¢ncia
      // 3. Impacto alto (preferencialmente)
      
      let score = 0;
      const factors = option.gradientFactors || { 
        urgency: 5, importance: 5, confidence: 5, 
        emotionalImpact: 5, longTermValue: 5 
      };
      
      // Valor a longo prazo tem peso maior
      score += (factors.longTermValue * 0.4);
      
      // Import√¢ncia tem peso significativo
      score += (factors.importance * 0.3);
      
      // Confian√ßa tem peso moderado
      score += (factors.confidence * 0.2);
      
      // Impacto (convertendo string para n√∫mero)
      const impactScore = 
        option.impact === 'high' ? 10 : 
        option.impact === 'medium' ? 6 : 3;
      score += (impactScore * 0.1);
      
      // Normalizar para escala 0-10
      score = Math.min(10, Math.max(0, score));
      
      // Gerar racioc√≠nio
      let reasoning = "";
      if (factors.longTermValue >= 8) {
        reasoning += "Esta op√ß√£o tem excelente valor a longo prazo. ";
      } else if (factors.longTermValue <= 3) {
        reasoning += "Esta op√ß√£o carece de valor estrat√©gico a longo prazo. ";
      }
      
      if (factors.importance >= 7) {
        reasoning += "A alta import√¢ncia desta decis√£o justifica aten√ß√£o estrat√©gica. ";
      }
      
      if (option.impact === 'high') {
        reasoning += "O alto impacto sugere potencial para mudan√ßas significativas. ";
      } else if (option.impact === 'low') {
        reasoning += "O baixo impacto limita o valor estrat√©gico. ";
      }
      
      if (reasoning === "") {
        reasoning = "Esta op√ß√£o tem um valor estrat√©gico moderado.";
      }
      
      return { score, reasoning };
    }
  },
  {
    id: "intuitive",
    name: "O Intuitivo",
    description: "Valoriza o impacto emocional e alinhamento com valores pessoais.",
    icon: "üß†",
    idealTimeOfDay: "night",
    color: "#9B59B6",
    evaluateOption: (option: DecisionOption) => {
      let score = 0;
      const factors = option.gradientFactors || { 
        urgency: 5, importance: 5, confidence: 5, 
        emotionalImpact: 5, longTermValue: 5 
      };
      
      // O intuitivo valoriza principalmente o impacto emocional
      score += (factors.emotionalImpact * 0.5);
      
      // Tamb√©m considera o valor a longo prazo (alinhamento com valores)
      score += (factors.longTermValue * 0.3);
      
      // E d√° algum peso para a confian√ßa (intui√ß√£o)
      score += (factors.confidence * 0.2);
      
      // Normalizar para escala 0-10
      score = Math.min(10, Math.max(0, score));
      
      // Gerar racioc√≠nio
      let reasoning = "";
      if (factors.emotionalImpact >= 8) {
        reasoning += "Esta op√ß√£o ressoa fortemente no n√≠vel emocional. ";
      } else if (factors.emotionalImpact <= 3) {
        reasoning += "Esta op√ß√£o parece n√£o despertar uma resposta emocional significativa. ";
      }
      
      if (factors.longTermValue >= 7) {
        reasoning += "Sinto que esta escolha est√° alinhada com seus valores mais profundos. ";
      } else if (factors.longTermValue <= 3) {
        reasoning += "Intuitivamente, esta op√ß√£o n√£o parece alinhada com seus valores fundamentais. ";
      }
      
      // Considerar os pr√≥s e contras de forma intuitiva
      if (option.pros.length > option.cons.length + 2) {
        reasoning += "H√° uma sensa√ß√£o de positividade marcante nesta op√ß√£o. ";
      } else if (option.cons.length > option.pros.length + 2) {
        reasoning += "Sinto v√°rios sinais de alerta nesta op√ß√£o. ";
      }
      
      if (reasoning === "") {
        reasoning = "Minha intui√ß√£o diz que esta op√ß√£o √© equilibrada, mas n√£o excepcional.";
      }
      
      return { score, reasoning };
    }
  },
  {
    id: "pragmatic",
    name: "O Pragm√°tico",
    description: "Prioriza efici√™ncia, resultados pr√°ticos e implementa√ß√£o.",
    icon: "‚öôÔ∏è",
    idealTimeOfDay: "day",
    color: "#F39C12",
    evaluateOption: (option: DecisionOption) => {
      let score = 0;
      const factors = option.gradientFactors || { 
        urgency: 5, importance: 5, confidence: 5, 
        emotionalImpact: 5, longTermValue: 5 
      };
      
      // O pragm√°tico valoriza:
      // 1. Alta confian√ßa (viabilidade)
      // 2. Urg√™ncia (resultados r√°pidos)
      // 3. Balan√ßo de pr√≥s e contras (praticidade)
      
      score += (factors.confidence * 0.4);
      score += (factors.urgency * 0.3);
      
      // Pr√≥s vs contras (an√°lise pr√°tica)
      const prosConsRatio = option.pros.length / Math.max(1, option.cons.length);
      const prosConsScore = Math.min(10, prosConsRatio * 3);
      score += (prosConsScore * 0.3);
      
      // Normalizar para escala 0-10
      score = Math.min(10, Math.max(0, score));
      
      // Gerar racioc√≠nio
      let reasoning = "";
      if (factors.confidence >= 8) {
        reasoning += "Esta op√ß√£o tem alta viabilidade pr√°tica. ";
      } else if (factors.confidence <= 3) {
        reasoning += "A viabilidade desta op√ß√£o √© question√°vel. ";
      }
      
      if (factors.urgency >= 7) {
        reasoning += "A urg√™ncia desta situa√ß√£o favorece a√ß√£o imediata. ";
      } else if (factors.urgency <= 3) {
        reasoning += "A baixa urg√™ncia permite considerar alternativas mais elaboradas. ";
      }
      
      if (prosConsRatio >= 2) {
        reasoning += "O balan√ßo positivo de pr√≥s e contras sugere uma op√ß√£o pr√°tica. ";
      } else if (prosConsRatio <= 0.5) {
        reasoning += "Os obst√°culos superam significativamente os benef√≠cios pr√°ticos. ";
      }
      
      if (reasoning === "") {
        reasoning = "Do ponto de vista pr√°tico, esta op√ß√£o √© moderadamente vi√°vel.";
      }
      
      return { score, reasoning };
    }
  },
  {
    id: "innovative",
    name: "O Inovador",
    description: "Busca solu√ß√µes criativas e n√£o convencionais.",
    icon: "üí°",
    idealTimeOfDay: "night",
    color: "#1ABC9C",
    evaluateOption: (option: DecisionOption) => {
      // O inovador valoriza originalidade e potencial transformador
      // Como isso √© dif√≠cil de quantificar diretamente nos dados dispon√≠veis,
      // faremos algumas suposi√ß√µes criativas
      
      let score = 0;
      const factors = option.gradientFactors || { 
        urgency: 5, importance: 5, confidence: 5, 
        emotionalImpact: 5, longTermValue: 5 
      };
      
      // Combina√ß√µes interessantes s√£o valorizadas
      // Alto impacto emocional + alto valor de longo prazo = potencial disruptivo
      const disruptiveScore = (factors.emotionalImpact * factors.longTermValue) / 10;
      score += (disruptiveScore * 0.4);
      
      // Confian√ßa moderada (nem muito alta, que sugere convencionalidade,
      // nem muito baixa, que sugere inviabilidade)
      const confidenceScore = 10 - Math.abs(factors.confidence - 6) * 2;
      score += (confidenceScore * 0.3);
      
      // Import√¢ncia alta
      score += (factors.importance * 0.3);
      
      // Normalizar para escala 0-10
      score = Math.min(10, Math.max(0, score));
      
      // Gerar racioc√≠nio
      let reasoning = "";
      if (disruptiveScore >= 7) {
        reasoning += "Esta op√ß√£o tem potencial para resultados realmente inovadores. ";
      } else if (disruptiveScore <= 3) {
        reasoning += "Esta op√ß√£o parece seguir caminhos convencionais. ";
      }
      
      if (Math.abs(factors.confidence - 6) <= 2) {
        reasoning += "O equil√≠brio entre confian√ßa e incerteza cria espa√ßo para inova√ß√£o. ";
      } else if (factors.confidence >= 9) {
        reasoning += "A alta previsibilidade limita o potencial para descobertas surpreendentes. ";
      } else if (factors.confidence <= 3) {
        reasoning += "A excessiva incerteza pode comprometer a implementa√ß√£o de ideias inovadoras. ";
      }
      
      if (factors.importance >= 8) {
        reasoning += "Quest√µes importantes merecem solu√ß√µes originais. ";
      }
      
      if (reasoning === "") {
        reasoning = "Do ponto de vista da inova√ß√£o, esta op√ß√£o tem potencial moderado para trazer novas perspectivas.";
      }
      
      return { score, reasoning };
    }
  },
  {
    id: "analytical",
    name: "O Anal√≠tico",
    description: "Enfatiza dados, l√≥gica e an√°lise met√≥dica.",
    icon: "üîç",
    idealTimeOfDay: "dawn",
    color: "#3498DB",
    evaluateOption: (option: DecisionOption) => {
      let score = 0;
      const factors = option.gradientFactors || { 
        urgency: 5, importance: 5, confidence: 5, 
        emotionalImpact: 5, longTermValue: 5 
      };
      
      // O anal√≠tico valoriza:
      // 1. Alta confian√ßa (dados confi√°veis)
      // 2. Import√¢ncia (vale a pena analisar)
      // 3. Balan√ßo objetivo de pr√≥s e contras
      
      score += (factors.confidence * 0.4);
      score += (factors.importance * 0.3);
      
      // An√°lise quantitativa de pr√≥s e contras
      const prosWeight = option.pros.length * 2;
      const consWeight = option.cons.length * 3; // Contras t√™m peso maior (vi√©s para cautela)
      const prosConsScore = Math.max(0, Math.min(10, (prosWeight - consWeight + 10) / 2));
      score += (prosConsScore * 0.3);
      
      // Normalizar para escala 0-10
      score = Math.min(10, Math.max(0, score));
      
      // Gerar racioc√≠nio
      let reasoning = "";
      if (factors.confidence >= 8) {
        reasoning += "Os dados dispon√≠veis apoiam fortemente esta op√ß√£o. ";
      } else if (factors.confidence <= 3) {
        reasoning += "H√° uma falta significativa de dados confi√°veis para esta op√ß√£o. ";
      }
      
      if (factors.importance >= 7) {
        reasoning += "A import√¢ncia desta decis√£o justifica uma an√°lise aprofundada. ";
      }
      
      if (option.pros.length > option.cons.length * 2) {
        reasoning += "A an√°lise objetiva mostra vantagens significativamente superiores √†s desvantagens. ";
      } else if (option.cons.length > option.pros.length) {
        reasoning += "As desvantagens superam as vantagens em uma an√°lise objetiva. ";
      } else {
        reasoning += "H√° um equil√≠brio relativamente balanceado entre pr√≥s e contras. ";
      }
      
      if (reasoning === "") {
        reasoning = "A an√°lise dos dados dispon√≠veis sugere que esta op√ß√£o tem m√©rito moderado.";
      }
      
      return { score, reasoning };
    }
  }
];

// Fun√ß√£o para obter os arqu√©tipos adequados para um determinado per√≠odo do dia
export const getArchetypesForTimeOfDay = (timeOfDay: 'dawn' | 'day' | 'night'): Archetype[] => {
  return archetypes.filter(
    archetype => archetype.idealTimeOfDay === timeOfDay || archetype.idealTimeOfDay === 'any'
  );
};

// Fun√ß√£o para obter todos os arqu√©tipos
export const getAllArchetypes = (): Archetype[] => {
  return archetypes;
};

// Fun√ß√£o para obter um arqu√©tipo espec√≠fico pelo ID
export const getArchetypeById = (id: string): Archetype | undefined => {
  return archetypes.find(archetype => archetype.id === id);
};

// Fun√ß√£o para avaliar uma op√ß√£o de decis√£o com todos os arqu√©tipos
export const evaluateOptionWithAllArchetypes = (option: DecisionOption) => {
  return archetypes.map(archetype => ({
    archetype,
    evaluation: archetype.evaluateOption(option)
  }));
};

// Fun√ß√£o para encontrar o arqu√©tipo que mais favorece uma op√ß√£o
export const findMostFavorableArchetype = (option: DecisionOption) => {
  const evaluations = evaluateOptionWithAllArchetypes(option);
  evaluations.sort((a, b) => b.evaluation.score - a.evaluation.score);
  return evaluations[0];
};

// Fun√ß√£o para encontrar o arqu√©tipo que menos favorece uma op√ß√£o
export const findLeastFavorableArchetype = (option: DecisionOption) => {
  const evaluations = evaluateOptionWithAllArchetypes(option);
  evaluations.sort((a, b) => a.evaluation.score - b.evaluation.score);
  return evaluations[0];
};
